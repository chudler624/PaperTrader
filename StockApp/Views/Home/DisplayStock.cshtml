@model StockApp.Models.DisplayPageModels.DisplayMasterModel;


<div class="row">
    <form asp-controller="Search" asp-action="DisplayStock">
        <div id="searchbar" class="input-group mb-3">
            <input type="text" name="stock" class="form-control" placeholder="Search Stocks">
            <button class="btn btn-outline-secondary" type="submit" id="button-addon2">Search</button>
        </div>
    </form>


</div>

@Model.QuoteModel.Change;








    

@*<div id="symbol">@Model.StockOVerviewModel.Symbol</div>  
<div id="name">@Model.StockOVerviewModel.Name</div>*@
price <br/>
change dollar (change pct)

<table id="buttonTable">
                    <td scope="row"><button type="button" class="btn btn-success">Buy</button></td>
                    <td><button type="button" class="btn btn-danger">Sell</button></td>
  
</table>




<br/>
<!-- Include the Chart.js library in your HTML file -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script>

<!-- Create a container element for the chart -->
<div id="myChartContainer">
  <canvas id="myChart"></canvas>
</div>

<script>
  // Set up the chart data
  var data = {
    labels: [
      "Day 1",
      "Day 2",
      "Day 3",
      "Day 4",
      "Day 5"
    ],
    datasets: [
      {
        label: "Open",
        data: [
          "555.3100",
          "550.3600",
          "565.3600",
          "580.3600",
          "590.1850"
        ],
        borderColor: "rgba(255, 99, 132, 0.2)",
        backgroundColor: "rgba(255, 99, 132, 0.2)",
        fill: false
      },
      {
        label: "High",
        data: [
          "575.3100",
          "570.3600",
          "585.3600",
          "590.3600",
          "595.3700"
        ],
        borderColor: "rgba(255, 206, 86, 0.2)",
        backgroundColor: "rgba(255, 206, 86, 0.2)",
        fill: false
      },
      {
        label: "Low",
        data: [
          "530.3100",
          "540.3600",
          "550.3600",
          "560.3600",
          "570.0050"
        ],
        borderColor: "rgba(54, 162, 235, 0.2)",
        backgroundColor: "rgba(54, 162, 235, 0.2)",
        fill: false
      },
      {
        label: "Close",
        data: [
          "560.3100",
          "550.3600",
          "570.3600",
          "580.3600",
          "590.0050"
        ],
        borderColor: "rgba(153, 102, 255, 0.2)",
        backgroundColor: "rgba(153, 102, 255, 0.2)",
        fill: false
      }
    ]
  };

  // Set up the chart options
  var options = {
    scales: {
      yAxes: [
        {
          ticks: {
            callback: function(value, index, values) {
              return '$' + value;
            }
          }
        }
      ]
    }
  };

  // Get the context of the canvas element we want to select
  var ctx = document.getElementById("myChart").getContext("2d");

  // Create a new chart using the chart options and data
  var myChart = new Chart(ctx, {
    type: "line",
    data: data,
    options: options
  });
</script>

         


<br/>
<br/>

@*
chart
<br/>
<br/>

<div>Stats</div>

<table class="statsTable">
                <tr>
                    <th>Open</th>
                    <td>m</td>
                    <th>PE Ratio</th>
                    <td>@Model.Item1.PERatio</td>
                </tr>
                <tr>
                    <th>High</th>
                    <td>m</td>
                    <th>Shares Outstanding</th>
                    <td>@Model.Item1.SharesOutstanding</td>
                </tr>
                <tr>
                    <th>Low</th>
                    <td>m</td>
                    <th>Market Cap</th>
                    <td>@Model.Item1.MarketCapitalization</td>
        }
    }
                </tr>
                 <tr>
                    <th>52 Week High</th>
                    <td>@Model._52WeekHigh</td>
                    <th>Book Value</th>
                    <td>@Model.BookValue</td>
                </tr>
                <tr>
                    <th>52 Week Low</th>
                    <td>@Model.Item1._52WeekLow</td>
                    <th>Dividend Yield</th>
                    <td>@Model.Item1.DividendYield</td>
                </tr> 
</table>

<br/>


<div>About</div>
<div class="description"><p>@Model.Description</p></div>

<table class="infoTable">
                <tr>
                    <th>Industry</th>
                    <td>@Model.Industry</td>
                </tr>
                <tr>
                    <th>Sector</th>
                    <td>@Model.Sector</td>
                </tr>
                <tr>
                    <th>Exchange</th>
                    <td>@Model.Exchange</td>
                </tr>
                <tr>
                    <th>Address</th>
                    <td>@Model.Address</td>
                </tr>
</table>



info
*@
